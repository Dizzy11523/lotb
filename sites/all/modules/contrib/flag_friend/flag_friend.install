<?php

/**
 * @file flag_friend.install
 */

/**
 * Implements hook_install().
 */
function flag_friend_install() {
  drupal_set_message(st('The flag_friend module installed its tables successfully. Please <a href="@enable">enable the friend flag</a>.', array('@enable' => url('admin/structure/flags/edit/friend'))));
}

/**
 * Implements hook_uninstall().
 */
function flag_friend_uninstall() {
  // Remove default flag if it's enabled.
  if ($flag = flag_get_flag('friend')) {
    $flag->delete();
  }
  drupal_set_message(st('The flag_friend module was successfully uninstalled.'));
}

/**
 * Implements hook_schema().
 */
function flag_friend_schema() {
  $schema['flag_friend'] = array(
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'disp-width' => '10'
      ),
      'friend_uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'disp-width' => '10'
      ),
      'created' => array(
        'type' => 'int',
        'not null' => FALSE,
        'disp-width' => '11'
      )
    ),
    'primary key' => array('uid', 'friend_uid'),
    'indexes' => array(
      'friend_uid' => array('friend_uid'),
    ),
  );

  $schema['flag_friend_message'] = array(
    'fields' => array(
      'fcid' => array(
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE
      )
    ),
    'primary key' => array('fcid'),
  );
  return $schema;
}

/**
 * Update to change the flag_friend_message:fcid from int to serial.
 */
function flag_friend_update_6000() {
  db_drop_primary_key('flag_friend_message');
  db_change_field('flag_friend_message', 'fcid', 'fcid', array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE), array('primary key' => array('fcid')));
  return st('Field type changed.');
}

/**
 * Add additional index by friend_uid to the flag_friend table.
 */
function flag_friend_update_6001() {
  db_add_index('flag_friend', 'friend_uid', array('friend_uid'));
  return st('Index added.');
}

/**
 * Delete flag_friend data for canceled accounts.
 */
function flag_friend_update_7000() {
  db_query("DELETE ff FROM {flag_friend} ff LEFT JOIN {users} u1 ON u1.uid = ff.uid LEFT JOIN {users} u2 ON u2.uid = ff.friend_uid WHERE u1.uid IS NULL OR u2.uid IS NULL");
}

/**
 * Delete duplicate flag_friend data.
 */
function flag_friend_update_7001() {
  $flag_friends = db_query("SELECT CONCAT(ff.uid, '__', ff.friend_uid) AS id1, CONCAT(ff1.uid, '__', ff1.friend_uid) AS id2 FROM {flag_friend} ff LEFT JOIN {flag_friend} ff1 ON ff1.uid = ff.friend_uid AND ff1.friend_uid = ff.uid WHERE ff1.uid IS NOT NULL")->fetchAllKeyed();

  foreach ($flag_friends as $id1 => $id2) {
    if (isset($flag_friends[$id2]) && $flag_friends[$id2] == $id1) {
      unset($flag_friends[$id1]);
    }
  }

  foreach ($flag_friends as $id) {
    list($uid, $friend_uid) = explode('__', $id);
    db_query("DELETE ff FROM {flag_friend} ff WHERE ff.uid = :uid AND ff.friend_uid = :friend_uid", array(':uid' => $uid, ':friend_uid' => $friend_uid));
  }
}
